import express from "express";
import cors from "cors";
import mongoose from "mongoose";
import authRoutes from "./routes/authRoutes";
import userRoutes from "./routes/userRoutes";
import { connectQueue } from "./config/rabbitmq";
import connectDB from './config/database';
import { Request, Response, NextFunction } from 'express';

const app = express();
const port = process.env.PORT || 3001;

app.use(cors());
app.use(express.json());

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
connectDB();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RabbitMQ
connectQueue();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose
  .connect("mongodb://mongo:27017/backend-5lab")
  .then(() => {
    console.log("üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB...");
    console.log("‚úÖ MongoDB —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω");
    console.log("üìö –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: backend-5lab");
    console.log("üìë –ö–æ–ª–ª–µ–∫—Ü–∏—è: users");
  })
  .catch((error: Error) => console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:", error));

// –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø—Ä—è–º—ã—Ö HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
app.use("/auth", authRoutes);
app.use("/users", userRoutes);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
  console.error(err.stack);
  res.status(500).json({ error: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!' });
});

app.listen(port, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
});

export default app;
